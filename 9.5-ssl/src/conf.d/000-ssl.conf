# tested on v9.5

# https://www.postgresql.org/docs/9.5/static/runtime-config-connection.html
# https://www.postgresql.org/docs/9.5/static/ssl-tcp.html

# --------------------------------------------------------------------------------
# test with this command
#
# psql "sslmode=require host=localhost port=5432 dbname=postgres" --username=postgres

# ################################################################################
# 18.3.2. Security and Authentication
#

# Enables SSL connections.
# Please read Section 17.9 before using this.
# The default is off.
ssl = on

# Specifies the name of the file containing the SSL server private key / server certificate.
# The default is server.key / server.crt..
# Relative paths are relative to the data directory.
ssl_key_file = '/etc/postgres/_cert/server-cert.key'
ssl_cert_file = '/etc/postgres/_cert/server-cert.crt'
#ssl_ca_file = ''
#ssl_crl_file = ''

# Specifies a list of SSL cipher suites that are allowed to be used on secure connections.
# See the ciphers manual page in the OpenSSL package for the syntax of this setting and a list of supported values.
# The default value is HIGH:MEDIUM:+3DES:!aNULL.
# It is usually reasonable, unless you have specific security requirements.
#ssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL' # allowed SSL ciphers

# Specifies whether to use the server's SSL cipher preferences, rather than the client's.
# The default is true.
#ssl_prefer_server_ciphers = on


# Specifies the name of the curve to use in ECDH key exchange.
# It needs to be supported by all clients that connect.
# It does not need to be same curve as used by server's Elliptic Curve key.
# The default is prime256v1.
# OpenSSL names for most common curves: prime256v1 (NIST P-256), secp384r1 (NIST P-384), secp521r1 (NIST P-521).
#
#ssl_ecdh_curve = 'prime256v1'

#password_encryption = on

# This parameter enables per-database user names.
# It is off by default.
#
# If this is on, you should create users as username@dbname.
# When username is passed by a connecting client, @ and the database name are appended to the user name
# and that database-specific user name is looked up by the server.
# Note that when you create users with names containing @ within the SQL environment,
# you will need to quote the user name.
#
# With this parameter enabled, you can still create ordinary global users.
# Simply append @ when specifying the user name in the client, e.g. joe@.
# The @ will be stripped off before the user name is looked up by the server.
#
# db_user_namespace causes the client's and server's user name representation to differ.
# Authentication checks are always done with the server's user name so authentication methods
# must be configured for the server's user name, not the client's.
# Because md5 uses the user name as salt on both the client and server,
# md5 cannot be used with db_user_namespace.
#db_user_namespace = off

